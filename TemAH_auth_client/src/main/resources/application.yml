server:
  port: 8010

logging:
  level:
    root: INFO
#    org.springframework.web: TRACE
#    org.springframework.security: TRACE
#    org.springframework.security.oauth2: TRACE
#    org.springframework.boot.autoconfigure: DEBUG

spring:
  thymeleaf:
    cache: false
  redis:
    host: 192.168.2.105
    database: 0
    port: 6379
    password:
    timeout: 3000ms
  security:
    oauth2:
      client:
        registration:
          client1-app:
            provider: auth-server
            client-id: client_1
            client-secret: 123
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            # Here we have to add a redirect URI containing path /login/oauth2/code/${registrationClientId} to
            # let OAuth2LoginAuthenticationFilter use granted code to request AccessToken
            redirect-uri: 'http://127.0.0.1:8010/login/oauth2/code/{registrationId}'
            client-name: client1_authorization_code
            # Add all scope we configured in auth server here, else it will cause "insufficient_scope" 403 error.
            scope:
              - openid
              - profile
              - client1.all
          client1-authorized:
            provider: auth-server
            client-id: client_1
            client-secret: 123
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            redirect-uri: 'http://127.0.0.1:8010/authorized'
            client-name: client1_authorized
            scope:
              - openid
              - profile
              - client1.all
          client2-app:
            provider: auth-server
            client-id: client_2
            client-secret: 123
            authorization-grant-type: authorization_code
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            client-name: client2_auto_approve
            scope:
              - openid
              - client2.all
        provider:
          auth-server:
            issuer-uri: http://localhost:7002
#            user-info-uri: http://127.0.0.1:7002/user
#            user-name-attribute: id

resource:
  client1:
    hello: http://127.0.0.1:8020/hello